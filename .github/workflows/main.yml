name: CI

on:
  push:
  pull_request:
  schedule:
    - cron: '0 0 1 * *' # Monthly
  workflow_dispatch:

jobs:
  build-linux:
    name: Build on Linux (${{ matrix.configuration }})
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        configuration: [Release, Debug]
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install g++-multilib libboost-dev libgl-dev ninja-build
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          target: i686-unknown-linux-gnu
          override: true
      - name: Generate the build system
        run: cmake -B build -G Ninja -DCMAKE_BUILD_TYPE=${{ matrix.configuration }}
      - name: Build
        run: cmake --build build
      - uses: actions/upload-artifact@v2
        with:
          name: BunnymodXT-${{ runner.os }}-${{ matrix.configuration }}
          path: build/libBunnymodXT.so
          if-no-files-found: error

  build-flatpak:
    name: Build under Flatpak
    runs-on: ubuntu-latest
    container:
      image: bilelmoussaoui/flatpak-github-actions:freedesktop-20.08
      options: --privileged
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - uses: bilelmoussaoui/flatpak-github-actions/flatpak-builder@v3
        with:
          manifest-path: build-aux/flatpak/rs.bxt.BunnymodXT.json
          cache-key: flatpak-builder-${{ github.sha }}

  build-windows:
    name: Build on Windows (${{ matrix.configuration }})
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        configuration: [Release, Debug]
    env:
      POWERSHELL_TELEMETRY_OPTOUT: 1
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          target: i686-pc-windows-msvc
          override: true
      - name: Install Boost
        uses: MarkusJx/install-boost@v1.0.1
        with:
          boost_version: 1.72.0
      - name: Generate the build system
        run: cmake -B build -A Win32
      - name: Build
        run: cmake --build build --config ${{ matrix.configuration }} -j $env:NUMBER_OF_PROCESSORS
      - uses: actions/upload-artifact@v2
        with:
          name: BunnymodXT-${{ runner.os }}-${{ matrix.configuration }}
          path: build\${{ matrix.configuration }}\BunnymodXT.dll
          if-no-files-found: error
